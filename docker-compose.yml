version: '3'

services:

  datadog:
    container_name: datadog
    image: datadog/agent
    environment:
      - DD_API_KEY= efb99a13112dd277ba6cc8090dcddd53
      - DD_SITE= datadoghq.com
      - DD_LOGS_ENABLED= true
      - DD_APM_ENABLED= true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

  post-api:
    container_name: post-api
    image: ghcr.io/fabrizioserial/jibberjabberpost:main
    ports:
      - "8082:8080"
    environment:
      DB_USER: sa
      DB_PASSWORD: password
      DB_NAME: postgres
      DB_HOST: post-db
      DB_PORT: 5432
      KC_URL: proxy:80/keycloak
      KEYCLOAK_POST_SECRET: QZCSmyoJFAvyLRamEtCNCVOXTyht4M1u
      KEYCLOACK_REALM_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAoQzAcQkmC4UF7YFZLIQNu1EHnupVeywQOZKRUsB/NQOxLa2ct3lZAZb05F1Xi9+jEhYPz3XG2YvBSnyGfzpEbqXnuYjI+ek6Zp/XUL/N5tKbH12gGiSMSj/t83lIWqSY/+jrfn5GP9L2zHc5WJHvSm913yp1RKKw19NJawsrkDRXl8UB3H1Wso8d/TgXOeQGIO7OWkWSQO50PsZbEO2siMBaWg+3TLOPvO2PtXPTSefLNFW3ekQKXzUJ1R3Zbo4PKPIe7oQuHDDwAD1BFlPHRZiSeazGZyJddKxlnE5sZQ+5Ij/4zLUnoDK8YC485wAGX3X8oArUXoWaWTt35cTwIDAQAB
      DD_API_KEY: efb99a13112dd277ba6cc8090dcddd53
    depends_on:
      - post-db
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "post-api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'


  post-db:
    container_name: post-db
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: post-db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf

  follow-api:
    container_name: follow-api
    image: ghcr.io/fabrizioserial/jibberjabberfollower-prod:latest
    ports:
      - "8083:8080"
    environment:
      DB_USER: sa
      DB_PASSWORD: password
      DB_NAME: postgres
      DB_HOST: follow-db
      DB_PORT: 5432
      KC_URL: proxy:80/keycloak
      KEYCLOAK_FOLLOW_SECRET: bk2DdIAkAitREUXKWaicD5xvUabEbHaa
      KEYCLOACK_REALM_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAoQzAcQkmC4UF7YFZLIQNu1EHnupVeywQOZKRUsB/NQOxLa2ct3lZAZb05F1Xi9+jEhYPz3XG2YvBSnyGfzpEbqXnuYjI+ek6Zp/XUL/N5tKbH12gGiSMSj/t83lIWqSY/+jrfn5GP9L2zHc5WJHvSm913yp1RKKw19NJawsrkDRXl8UB3H1Wso8d/TgXOeQGIO7OWkWSQO50PsZbEO2siMBaWg+3TLOPvO2PtXPTSefLNFW3ekQKXzUJ1R3Zbo4PKPIe7oQuHDDwAD1BFlPHRZiSeazGZyJddKxlnE5sZQ+5Ij/4zLUnoDK8YC485wAGX3X8oArUXoWaWTt35cTwIDAQAB
      DD_API_KEY: efb99a13112dd277ba6cc8090dcddd53
    depends_on:
      - follow-db
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "follow-api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'

  follow-db:
    container_name: follow-db
    image: postgres:12
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: follow-db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
    ports:
      - "8081:8080"
    command: start-dev
    depends_on:
      - keycloak-db

  keycloak-db:
    container_name: keycloak-db
    image: postgres:12
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak

  frontend:
    container_name: frontend
    image: ghcr.io/fabrizioserial/javierjavierfront-prod:latest
    ports:
      - "9090:80"
    restart: always

  proxy:
    container_name: proxy
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - follow-api
      - post-api
    volumes:
      - ./static/:/usr/share/nginx/html:ro
      - ./conf.d/:/etc/nginx/conf.d/:rw
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  pgdata:
    external: true
  followdata:
    external: true